{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/Header.tsx"],"sourcesContent":["\"use client\";\n\nimport { useRouter } from 'next/navigation';\nimport { ArrowLeft } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\n\ninterface HeaderProps {\n  title: string;\n  showBackButton?: boolean;\n  actions?: React.ReactNode;\n}\n\nexport default function Header({ title, showBackButton = false, actions }: HeaderProps) {\n  const router = useRouter();\n\n  return (\n    <header className=\"sticky top-0 z-40 w-full bg-background/80 backdrop-blur-sm border-b border-border p-4 flex items-center justify-between h-16\">\n      <div className=\"flex items-center gap-4\">\n        {showBackButton && (\n          <Button variant=\"ghost\" size=\"icon\" onClick={() => router.back()} aria-label=\"Go back\">\n            <ArrowLeft className=\"h-5 w-5\" />\n          </Button>\n        )}\n        <h1 className=\"text-xl font-bold glowing-text-primary truncate\">{title}</h1>\n      </div>\n      {actions && <div className=\"flex items-center gap-2\">{actions}</div>}\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAYe,SAAS,OAAO,EAAE,KAAK,EAAE,iBAAiB,KAAK,EAAE,OAAO,EAAe;;IACpF,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,qBACE,6LAAC;QAAO,WAAU;;0BAChB,6LAAC;gBAAI,WAAU;;oBACZ,gCACC,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAQ,MAAK;wBAAO,SAAS,IAAM,OAAO,IAAI;wBAAI,cAAW;kCAC3E,cAAA,6LAAC,mNAAA,CAAA,YAAS;4BAAC,WAAU;;;;;;;;;;;kCAGzB,6LAAC;wBAAG,WAAU;kCAAmD;;;;;;;;;;;;YAElE,yBAAW,6LAAC;gBAAI,WAAU;0BAA2B;;;;;;;;;;;;AAG5D;GAhBwB;;QACP,qIAAA,CAAA,YAAS;;;KADF","debugId":null}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/shared/GradientButton.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from 'react';\nimport { Button, type ButtonProps } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\n\ninterface GradientButtonProps extends ButtonProps {\n  gradient?: string;\n  glowEffect?: 'primary' | 'secondary' | 'accent' | 'none';\n}\n\nconst GradientButton = React.forwardRef<HTMLButtonElement, GradientButtonProps>(\n  ({ className, children, gradient = 'bg-gradient-to-r from-[hsl(var(--primary))] via-[hsl(var(--accent))] to-[hsl(var(--secondary))]', glowEffect = 'primary', ...props }, ref) => {\n    const glowClass = {\n      primary: 'shadow-glow-primary',\n      secondary: 'shadow-glow-secondary',\n      accent: 'shadow-glow-accent',\n      none: '',\n    }[glowEffect];\n    \n    return (\n      <Button\n        ref={ref}\n        className={cn(\n          gradient,\n          'text-primary-foreground hover:opacity-90 transition-opacity',\n          'focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background',\n          glowEffect !== 'none' && `hover:${glowClass} focus:${glowClass}`,\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </Button>\n    );\n  }\n);\nGradientButton.displayName = 'GradientButton';\n\nexport { GradientButton };\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAWA,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OACpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,iGAAiG,EAAE,aAAa,SAAS,EAAE,GAAG,OAAO,EAAE;IACxK,MAAM,YAAY;QAChB,SAAS;QACT,WAAW;QACX,QAAQ;QACR,MAAM;IACR,CAAC,CAAC,WAAW;IAEb,qBACE,6LAAC,qIAAA,CAAA,SAAM;QACL,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,UACA,+DACA,iHACA,eAAe,UAAU,CAAC,MAAM,EAAE,UAAU,OAAO,EAAE,WAAW,EAChE;QAED,GAAG,KAAK;kBAER;;;;;;AAGP;;AAEF,eAAe,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;;AAIf,UAAU,WAAW,GAAG,wKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}}]
}